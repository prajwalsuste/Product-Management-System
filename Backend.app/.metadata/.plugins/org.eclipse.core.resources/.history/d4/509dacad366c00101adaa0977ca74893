package com.mydata.ems.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mydata.ems.dto.ProductDTO;
import com.mydata.ems.entity.Product;
import com.mydata.ems.exception.ResourceNotFoundException;
import com.mydata.ems.mapper.ProductMapper;
import com.mydata.ems.repository.ProductRepository;

@Service
public class ProductServiceImpl implements ProductService {

	@Autowired
	ProductRepository proRepo;
	
	public void setProRepo(ProductRepository proRepo) {
		this.proRepo = proRepo;
	}

	@Override
	public ProductDTO saveProduct(ProductDTO pdto) {
		// TODO Auto-generated method stub
		Product p =ProductMapper.mapToProduct(pdto);
		Product savedProduct=proRepo.save(p);
		ProductDTO savedDTO =ProductMapper.mapToProductDTO(savedProduct);
		return savedDTO;
	}

	@Override
	public List<ProductDTO> getAllProducts() {
		List<Product> allPro=proRepo.findAll();
		return allPro.stream()
				.map((product)->ProductMapper.mapToProductDTO(product))
				.collect(Collectors.toList());
	}

	@Override
	public ProductDTO getProductById(Long id) throws ResourceNotFoundException {
		Product p =proRepo.findById(id)
				.orElseThrow(() ->
				new ResourceNotFoundException("Product not exist with given id :"+id));
						
		return ProductMapper.mapToProductDTO(p);
	}

	@Override
	public void deleteProduct(Long id) throws ResourceNotFoundException {
		Product p=proRepo.findById(id)
				.orElseThrow(
						()->new ResourceNotFoundException("Product is not exist with given id : "+id));
						proRepo.deleteById(id);
						
						
		
	}
	


}
